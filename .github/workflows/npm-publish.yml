name: Publish to Npm

on:
  # 创建release时触发
  release:
    types: [created]

jobs:
  publish:
    # 运行环境
    runs-on: ubuntu-latest
    steps:
      # 签出github仓库代码
      - uses: actions/checkout@v3

      # 设置nodejs版本和npm仓库地址
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.com/

      # 设置pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      # 创建 TAG_VERSION 变量，被赋值tag版本，并在github actions 环境变量文件（$GITHUB_ENV）中追加配置,可以使用env变量访问
      - name: Get version
        run: echo "TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # 创建 GIT_HEAD 变量，被赋值为当前提交的SHA值，并追加写入到环境变量文件中
      - name: Get git head
        run: echo "GIT_HEAD=${GITHUB_SHA}" >> $GITHUB_ENV

      # 配置 npm 认证，以便在不输入密码的情况下自动发布npm包
      - name: Gen npmrc
        run: echo "//registry.npmjs.com/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}"  >> ./.npmrc

      # 根据pnpm-lock.yaml文件中的版本安装依赖，且锁定该文件
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile

      # 打包发布
      - name: Build&Publish
        run: pnpm run zx:gen
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}} # npm access token
          TAG_VERSION: ${{env.TAG_VERSION}}
          GIT_HEAD: ${{env.GIT_HEAD}}
          REGISTRY: https://registry.npmjs.com/
          FORCE_COLOR: 2
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN自动会生成，无需添加
          NODE_OPTIONS: --max-old-space-size=4096
