@use 'sass:math';
@use 'sass:map';
@use 'sass:color';

@use '../mixins/function.scss' as *;

/// 内置模块地址
/// math：https://sass.nodejs.cn/documentation/modules/math/
/// map：https://sass.nodejs.cn/documentation/modules/map/
/// color：https://sass.nodejs.cn/documentation/modules/color/

// 类型
$types: primary, success, warning, danger, error, info;

/// 自定义覆盖颜色
/// @example
/// @use '@/styles/var' with (
///     $colors: (
///         'primary': (
///             'base': #409eff
///         )
///     )
/// );
///
$colors: () !default;
// 颜色映射
$colors: map.deep-merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #0057fd
    ),
    'success': (
      'base': #10d431
    ),
    'warning': (
      'base': #ff8935
    ),
    'danger': (
      'base': #fb5555
    ),
    'error': (
      'base': #fb5555
    ),
    'info': (
      'base': #909399
    )
  ),
  $colors
);

// 基础颜色scss变量
$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

/// 混入白色，并合并分配给全局的$colors变量
/// https://sass.nodejs.cn/documentation/variables/
/// @example
/// @include set-color-mix-level(primary, 1, 'light'); => $colors: (
///     'primary': (
///         'base':'#409eff',
///         'light-1': #53a8ff, // 10%
///         'light-2': #66b1ff, // 20%
///         'light-3': #79bbff, // 30%
///         'light-4': #8cc5ff, // 40%
///         'light-5': #a0cfff, // 50%
///         'light-6': #b3d8ff, // 60%
///         'light-7': #c6e2ff, // 70%
///         'light-8': #d9ecff, // 80%
///         'light-9': #ecf5ff, // 90%
///     )
/// ) !global;
@mixin set-color-mix-level($type, $number, $mode: 'light', $mix-color: $color-white) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}': color.mix(
            $mix-color,
            map.get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          )
      )
    ),
    $colors
  ) !global;
}

// 设置type 的light mix-level
@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}

// 设置type 的dark mix-level
@each $type in $types {
  @include set-color-mix-level($type, 2, 'dark', $color-black);
}

// 文本颜色映射
$text-color: () !default;
$text-color: map.merge(
  (
    'primary': #333333,
    'regular': #8b8b8b,
    'secondary': #bcbcbc,
    'placeholder': #a8abb2,
    'disabled': #d1d1d1
  ),
  $text-color
);

// 边框颜色映射
$border-color: () !default;
$border-color: map.merge(
  (
    '': #dcdfe6,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
    'dark': #d4d7de,
    'darker': #cdd0d6
  ),
  $border-color
);

// 填充颜色
$fill-color: () !default;
$fill-color: map.merge(
  (
    '': #f0f2f5,
    'light': #f5f7fa,
    'lighter': #fafafa,
    'extra-light': #fafcff,
    'dark': #ebedf0,
    'darker': #e6e8eb,
    'blank': #ffffff
  ),
  $fill-color
);

// 背景颜色
$bg-color: () !default;
$bg-color: map.merge(
  (
    '': #ffffff,
    'page': #f2f3f5,
    'overlay': #ffffff
  ),
  $bg-color
);

// Border
$border-width: 1px !default;
$border-style: solid !default;
// var(--sm-text-color-disbaled)
$border-color-hover: getCssVar('text-color', 'disabled') !default;

$border-radius: () !default;
$border-radius: map.merge(
  (
    'small': 2px,
    'base': 4px,
    'large': 6px,
    'round': 20px,
    'circle': 100%
  ),
  $border-radius
);

// Box-shadow
$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0px 12px 32px 4px rgba(0, 0, 0, 0.04),
      0px 8px 20px rgba(0, 0, 0, 0.08)
    ),
    'light': (
      0px 0px 12px rgba(0, 0, 0, 0.12)
    ),
    'lighter': (
      0px 0px 6px rgba(0, 0, 0, 0.12)
    ),
    'dark': (
      0px 16px 48px 16px rgba(0, 0, 0, 0.08),
      0px 12px 32px rgba(0, 0, 0, 0.12),
      0px 8px 16px -8px rgba(0, 0, 0, 0.16)
    )
  ),
  $box-shadow
);

// Typography
$font-family: () !default;
$font-family: map.merge(
  (
    // default family
    '':
      "'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', Arial, sans-serif"
  ),
  $font-family
);

$font-size: () !default;
$font-size: map.merge(
  (
    'extra-large': 20px,
    'large': 18px,
    'medium': 16px,
    'base': 14px,
    'small': 12px,
    'extra-small': 10px
  ),
  $font-size
);

// line-height
$line-height: () !default;
$line-height: map.merge(
  (
    '': 20px,
    'small': 16px,
    'extra-small': 14px,
    'medium': 18px,
    'large': 22px,
    'extra-large': 24px
  ),
  $line-height
);

// zIndex
$z-index: () !default;
$z-index: map.merge(
  (
    'normal': 1,
    'top': 1000,
    'popper': 2000
  ),
  $z-index
);

// Disable default
$disabled: () !default;
$disabled: map.merge(
  (
    'bg-color': getCssVar('fill-color', 'light'),
    'text-color': getCssVar('text-color', 'placeholder'),
    'border-color': getCssVar('border-color', 'light')
  ),
  $disabled
);

// ======组件自定义变量======

// Button
$button-border-color: () !default;
$button-bg-color: () !default;
$button-text-color: () !default;

@each $type in $types {
  $button-border-color: map.merge(
    (
      $type: map.get($colors, $type, 'base')
    ),
    $button-border-color
  ) !global;

  $button-bg-color: map.merge(
    (
      $type: map.get($colors, $type, 'base')
    ),
    $button-bg-color
  ) !global;
}

// Table
$table: () !default;
$table: map.merge((), $table);

$table-custom-btn: () !default;
$table-custom-btn: map.merge(
  (
    'radus': getCssVar('border-radius', 'base'),
    'text-color': getCssVar('color-primary'),
    'border-color': getCssVar('color-primary')
  ),
  $table-custom-btn
);

$table-font-size: () !default;
$table-font-size: map.merge(
  (
    'small': getCssVar('font-size', 'small'),
    'default': getCssVar('font-size', 'base'),
    'large': getCssVar('font-size', 'medium')
  ),
  $table-font-size
);

$table-cell-line-height: () !default;
$table-cell-line-height: map.merge(
  (
    'small': getCssVar('line-height', 'small'),
    'default': getCssVar('line-height'),
    'large': getCssVar('line-height')
  ),
  $table-cell-line-height
);

// 垂直padding
$table-cell-padding-vertical: () !default;
$table-cell-padding-vertical: map.merge(
  (
    'small': 6px,
    'default': 8px,
    'large': 8px
  ),
  $table-cell-padding-vertical
);

// 水平padding
$table-cell-padding-horizontal: () !default;
$table-cell-padding-horizontal: map.merge(
  (
    'small': 10px,
    'default': 12px,
    'large': 12px
  ),
  $table-cell-padding-horizontal
);
